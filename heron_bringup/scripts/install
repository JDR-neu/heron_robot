#!/bin/bash
source `rospack find rosbash`/rosbash

# Check for heron_controller package.
rospack find heron_controller > /dev/null
if [[ "$?" != "0" ]]; then
  echo "Cannot find heron_controller package. Please contact Clearpath Robotics"
  echo "for instructions on installing the Heron supplementary packages."
  exit 1 
fi

# Install the upstart job and launch files.
rosrun robot_upstart install heron_bringup/launch/core --job heron-core \
                               --interface ${1-${ROBOT_NETWORK-eth0}} \
                               --setup ${ROBOT_SETUP-$(roscd; echo `pwd`/setup.bash)}
rosrun robot_upstart install heron_description/launch --job heron-core --augment

# Install the default compass calibration.
COMPASS_YAML=/etc/ros/$ROS_DISTRO/imu_compass.yaml
if [ -e "$COMPASS_YAML" ]; then
  echo "Compass yaml config already exists, skipping."
else 
  echo "Installing compass yaml file to $COMPASS_YAML"
  sudo cp "$(rospack find heron_bringup)/config/imu_compass.yaml" "$COMPASS_YAML"
fi

# Install the default controller configuration.
CONTROLLER_YAML=/etc/ros/$ROS_DISTRO/heron_controller.yaml
if [ -e "$CONTROLLER_YAML" ]; then
  echo "Controller yaml config already exists, skipping."
else
  echo "Installing controller yaml file to $CONTROLLER_YAML"
  sudo cp "$(rospack find heron_controller)/config/heron_controller.yaml" "$CONTROLLER_YAML"
fi

# Install the udev rules.
rospd heron_bringup/udev > /dev/null
echo "Installing udev rules."
sudo cp *.rules /etc/udev/rules.d/
popd > /dev/null
sudo udevadm trigger

# Configure ublox GPS.
rospd heron_bringup/config > /dev/null
if [ -e /dev/ublox ]; then
  echo "Attempting to configure ublox GPS."
  sed '/^\#/d' ublox.hex | xxd -r -p > /dev/ublox
else
  echo "Can't find ublox GPS to configure it. Please replug it and rerun this script."
fi
popd > /dev/null
